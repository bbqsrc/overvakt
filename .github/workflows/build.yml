on:
  push:
    tags:
      - "v*.*.*"

name: Build and Release

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-releases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache build artifacts
        id: cache-cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: build-${{ runner.os }}-cargo-any

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          override: true

      - name: Install cross-compilation tools (if needed)
        run: which cross >/dev/null || cargo install cross

      - name: Verify versions
        run: rustc --version && rustup --version && cargo --version && cross --version

      - name: Get current tag
        id: current_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Release binaries
        run: ./scripts/release_binaries.sh --version=${{ steps.current_tag.outputs.tag }}

      - name: Release new version
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.current_tag.outputs.tag }}
          name: Övervakt ${{ steps.current_tag.outputs.tag }}
          body: "⚠️ Changelog not yet provided."
          files: ./${{ steps.current_tag.outputs.tag }}-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
